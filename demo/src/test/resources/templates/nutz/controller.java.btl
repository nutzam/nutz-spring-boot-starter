package ${package.Controller};

import static org.nutz.spring.boot.service.interfaces.EntityService.*;

import org.springframework.http.HttpStatus;
import org.nutz.lang.Lang;
import org.nutz.lang.Strings;
import lombok.RequiredArgsConstructor;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
<% if(restControllerStyle){ %>
import org.springframework.web.bind.annotation.RestController;
<% }else{ %>
import org.springframework.stereotype.Controller;
<% } %>
<% if(isNotEmpty(superControllerClassPackage)){ %>
import ${superControllerClassPackage};
<% } %>

import org.nutz.spring.boot.service.entity.Pagination;
import ${package.Entity}.${entity};
import ${package.Service}.${entity}Service;

<% if(springdoc){ %>
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.tags.Tag;
<% } %>
/**
 * <p>
 * ${table.comment!} 前端控制器
 * </p>
 *
 * @author ${author}
 *
 * @since ${date}
 */
<% if(restControllerStyle){ %>
@RestController
@RequiredArgsConstructor
<% }else{ %>
@Controller
@RequiredArgsConstructor
<% } %>
<% if(kotlin){ %>
class ${table.controllerName}<% if(isNotEmpty(superControllerClass)){ %> : ${superControllerClass}()<% } %>
<% }else{ %>
    <% if(isNotEmpty(superControllerClass)){ %>
public class ${table.controllerName} extends ${superControllerClass} {
    <% }else{ %>
 <% if(springdoc){ %>
@Tag(name = "${entity}", description = "${table.comment!''}")
 <% } %> 
public class ${table.controllerName} {
    <% } %>
	
	<%
		var entityNameFirst = strutil.subStringTo(entity,0,1);
		var entityNameFirstLower = strutil.toLowerCase(entityNameFirst);
		var entityName  = strutil.replace(entity,entityNameFirst,entityNameFirstLower);
	%>
    private final ${entity}Service ${entityName}Service;

    /**
     * 分页查询${table.comment!}
     * 
     * @param page
     *            页码
     * @param size
     *            分页大小
     * @param key
     *            关键词
     * @return ${table.comment!}分页数据
     */
    @GetMapping("${controllerMappingHyphen}s")
     <% if(springdoc){ %>
    @Operation(summary = "分页查询${table.comment!''}")
      public Pagination<${entity}> ${entityName}s(
      								 @Parameter(description = "页码") @RequestParam(value = "page", required = false, defaultValue = "1") int page,
                                     @Parameter(description = "页面大小") @RequestParam(value = "size", required = false, defaultValue = "10") int size,
                                     @Parameter(description = "搜索关键词") @RequestParam(name = "key", required = false, defaultValue = "") String key) {
      <% }else{ %> 
       public Pagination<${entity}> ${entityName}s(@RequestParam("page") int page,
                                           @RequestParam("size") int size,
                                           @RequestParam(name = "key", required = false, defaultValue = "") String key) {
      <% } %>
        return ${entityName}Service.searchByKeyAndPage(key,
                                                page,
                                                size,
                                                ${entity}.Fields.name); 
    }

    /**
     * ${table.comment!}详情
     * 
     * @param id
     *            ${table.comment!}id
     * @return ${table.comment!}
     */
    @GetMapping("${controllerMappingHyphen}/{id}")
    <% if(springdoc){ %>
    	@Operation(summary ="${table.comment!''}详情")
		public ${entity} ${entityName}Detail(@Parameter(description = "${table.comment!''}id", required = true) @PathVariable("id") long id) {
      <% }else{ %> 
       public ${entity} ${entityName}Detail(@PathVariable("id") long id) {
      <% } %> 
        return ${entityName}Service.fetch(id);
    }

    /**
     * 添加或者更新${table.comment!}
     * 
     * @param ${entityName}
     *            ${table.comment!}数据
     * @return ${table.comment!}
     */
    @PutMapping("${controllerMappingHyphen}")
    <% if(springdoc){ %>
    @Operation(summary = "增加/编辑${table.comment!''}")
    public ${entity} saveOrUpdate${entity}(@Validated @Parameter(description ="${table.comment!''}")@RequestBody ${entity} ${entityName}) {
      <% }else{ %> 
     public ${entity} saveOrUpdate${entity}(@Validated @RequestBody ${entity} ${entityName}) {
      <% } %> 
        if (${entityName}.getId() != null && ${entityName}.getId() > 0) {
            if (${entityName}Service.update(${entityName}) == 1) {
                return ${entityName};
            } else {
                throw Lang.makeThrow("更新${table.comment!}失败!");
            }
        }
        return ${entityName}Service.insert(${entityName});
    }

    /**
     * 删除${table.comment!}
     * 
     * @param id
     *            ${table.comment!}id
     * @return 是否删除成功
     */
    @DeleteMapping("${controllerMappingHyphen}/{id}")
    <% if(springdoc){ %>
    @Operation(summary = "删除${table.comment!''}")
    @ResponseStatus(HttpStatus.OK)
    public void delete${entity}(@Parameter(description = "${table.comment!''}id", required = true)@PathVariable("id") long id) {
      <% }else{ %> 
    public void delete${entity}(@PathVariable("id") long id) {
      <% } %>
         if(${entityName}Service.delete(id) != 1){
         		throw Lang.makeThrow("删除${table.comment!}失败!");
         }
    }

}
<% } %>